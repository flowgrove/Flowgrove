git checkout -b rolling-build-test
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test" && git push origin rolling-build-test
git push origin --delete rolling-build-test
git checkout main
git merge rolling-build-test --no-ff
git push origin main
git branch -D rolling-build-test
push:
  branches: ['**']
Rolling Build: <Build ID>
Update VERSION to <Build ID>
# Create temporary test branch
git checkout -b rolling-build-test

# Trigger dummy build
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test"
git push origin rolling-build-test

# Workflow runs automatically (VERSION update, Build ID, tag, verification)

# Merge automatically if needed
git checkout main
git merge rolling-build-test --no-ff
git push origin main

# Delete test branch locally & remotely
git branch -D rolling-build-test
git push origin --delete rolling-build-test
push:
  branches: ['**']
Rolling Build: <Build ID>
Update VERSION to <Build ID>
# Create temporary test branch
git checkout -b rolling-build-test

# Trigger dummy build
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test"
git push origin rolling-build-test

# Workflow runs automatically (VERSION update, Build ID, tag, verification)

# Merge automatically into main if needed
git checkout main
git merge rolling-build-test --no-ff
git push origin main

# Delete test branch locally & remotely
git branch -D rolling-build-test
git push origin --delete rolling-build-test
push:
  branches: ['**']
Rolling Build: <Build ID>
Update VERSION to <Build ID>
# Create temporary test branch
git checkout -b rolling-build-test

# Trigger dummy build
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test"
git push origin rolling-build-test

# Workflow runs automatically (VERSION update, Build ID, tag, verification)

# Merge automatically into main if needed
git checkout main
git merge rolling-build-test --no-ff
git push origin main

# Delete test branch locally & remotely
git branch -D rolling-build-test
git push origin --delete rolling-build-test
name: Rolling Build

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Generate Build ID
        id: build_id
        run: |
          BUILD_ID=$(date +"%Y.%m.%d.%H%M%S")
          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV

      - name: Update VERSION
        run: |
          echo "Rolling Build: $BUILD_ID" > VERSION
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add VERSION
          git commit -m "Update VERSION to $BUILD_ID" || echo "No changes to commit"
      - name: Create Git Tag
        run: |
          git tag -f build-$BUILD_ID
          git push origin build-$BUILD_ID --force
git checkout -b rolling-build-test
touch .rolltest && git add .rolltest && git commit -m "Green Light Test"
git push origin rolling-build-test
# Workflow runs automatically
git checkout main
git merge rolling-build-test --no-ff
git push origin main
git branch -D rolling-build-test
git push origin --delete rolling-build-test
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Flowgrove Hub – Fully automated rolling build system for effortless development and version control.">
<title>Flowgrove Hub</title>
<link rel="icon" href="logo.svg">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
<style>
  * { margin:0; padding:0; box-sizing:border-box; font-family:'Inter', sans-serif; }
  body { background:#f4f4f9; color:#333; line-height:1.6; }
  a { text-decoration:none; color:inherit; }

  header { background:#1abc9c; color:#fff; padding:20px 0; }
  header .container { display:flex; justify-content:space-between; align-items:center; max-width:1200px; margin:0 auto; padding:0 20px; }
  header h1 { font-weight:600; }
  nav a { margin-left:20px; font-weight:500; transition:0.3s; }
  nav a:hover { color:#fff; text-decoration:underline; }

  .hero { text-align:center; padding:100px 20px; background:#16a085; color:#fff; }
  .hero h2 { font-size:2.5rem; margin-bottom:20px; }
  .hero p { font-size:1.2rem; }

  .features { max-width:1000px; margin:50px auto; display:grid; grid-template-columns:repeat(auto-fit, minmax(250px,1fr)); gap:30px; padding:0 20px; }
  .feature { background:#fff; padding:20px; border-radius:10px; box-shadow:0 2px 10px rgba(0,0,0,0.1); }
  .feature h3 { margin-bottom:10px; color:#16a085; }

  .status { max-width:800px; margin:50px auto; background:#fff; padding:20px; border-radius:10px; text-align:center; box-shadow:0 2px 10px rgba(0,0,0,0.1); }
  .status h3 { color:#16a085; margin-bottom:10px; }

  footer { background:#333; color:#fff; text-align:center; padding:20px 0; margin-top:50px; }
  footer a { color:#1abc9c; }
</style>
</head>
<body>

<header>
  <div class="container">
    <h1>Flowgrove Hub</h1>
    <nav>
      <a href="#features">Features</a>
      <a href="#status">Build Status</a>
      <a href="#repo">Repo</a>
      <a href="#contact">Contact</a>
    </nav>
  </div>
</header>

<section class="hero">
  <h2>Fully Automated Rolling Builds</h2>
  <p>Live Build ID, VERSION info, and latest commits—all automatic.</p>
</section>

<section id="features" class="features">
  <div class="feature"><h3>Automatic Build ID</h3><p>Generates unique timestamped Build IDs.</p></div>
  <div class="feature"><h3>VERSION Tracking</h3><p>Automatically updates the VERSION file and commits changes.</p></div>
  <div class="feature"><h3>Git Tagging</h3><p>Creates and pushes tags for every successful build.</p></div>
  <div class="feature"><h3>Self Verification</h3><p>Checks that VERSION matches the build and rolls back if needed.</p></div>
  <div class="feature"><h3>Temp File Handling</h3><p>Includes temp and extra file changes automatically.</p></div>
  <div class="feature"><h3>Green Light Test</h3><p>Tests workflow in a sandboxed branch and cleans up automatically.</p></div>
</section>

<section id="status" class="status">
  <h3>Latest Build Status</h3>
  <p>Build ID: <span id="build-id">Fetching...</span></p>
  <p>VERSION: <span id="version-file">Fetching...</span></p>
</section>

<section id="repo" class="status">
  <h3>Repository</h3>
  <p><a href="https://github.com/flowgrove/Flowgrove" target="_blank">View on GitHub</a></p>
</section>

<footer id="contact">
  <p>&copy; 2025 Flowgrove Hub | <a href="#contact">Contact</a></p>
</footer>

<script>
  // Dynamically load Build ID & VERSION from a JSON endpoint or GitHub API
  fetch('build_info.json')
    .then(res => res.json())
    .then(data => {
      document.getElementById('build-id').textContent = data.build_id;
      document.getElementById('version-file').textContent = data.version;
    })
    .catch(()=>{console.log('Dynamic build info not available')});
</script>

</body>
</html>
- name: Output build info
  run: |
    echo "{\"build_id\": \"$GITHUB_SHA\", \"version\": \"$(cat VERSION)\"}" > build_info.json
fetch('https://yourdomain.com/build_info.json')
  .then(response => response.json())
  .then(data => {
    document.getElementById('build-id').textContent = data.build_id;
    document.getElementById('version-file').textContent = data.version;
  });
<meta name="description" content="Flowgrove Hub – Fully automated rolling build system for effortless development and version control.">
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Kn.Ai – Fully automated rolling build system for effortless development and version control.">
<title>Kn.Ai</title>
<link rel="icon" href="knai-logo.svg">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
<style>
  * { margin:0; padding:0; box-sizing:border-box; font-family:'Inter', sans-serif; }
  body { background:#f4f4f9; color:#333; line-height:1.6; }
  a { text-decoration:none; color:inherit; }

  header { background:#1abc9c; color:#fff; padding:20px 0; }
  header .container { display:flex; justify-content:space-between; align-items:center; max-width:1200px; margin:0 auto; padding:0 20px; }
  header h1 { font-weight:600; }
  nav a { margin-left:20px; font-weight:500; transition:0.3s; }
  nav a:hover { color:#fff; text-decoration:underline; }

  .hero { text-align:center; padding:100px 20px; background:#16a085; color:#fff; }
  .hero h2 { font-size:2.5rem; margin-bottom:20px; }
  .hero p { font-size:1.2rem; }

  .features { max-width:1000px; margin:50px auto; display:grid; grid-template-columns:repeat(auto-fit, minmax(250px,1fr)); gap:30px; padding:0 20px; }
  .feature { background:#fff; padding:20px; border-radius:10px; box-shadow:0 2px 10px rgba(0,0,0,0.1); }
  .feature h3 { margin-bottom:10px; color:#16a085; }

  .status { max-width:800px; margin:50px auto; background:#fff; padding:20px; border-radius:10px; text-align:center; box-shadow:0 2px 10px rgba(0,0,0,0.1); }
  .status h3 { color:#16a085; margin-bottom:10px; }

  footer { background:#333; color:#fff; text-align:center; padding:20px 0; margin-top:50px; }
  footer a { color:#1abc9c; }
</style>
</head>
<body>

<header>
  <div class="container">
    <img src="knai-logo.svg" alt="Kn.Ai Logo" style="height:50px;">
    <h1>Kn.Ai</h1>
    <nav>
      <a href="#features">Features</a>
      <a href="#status">Build Status</a>
      <a href="#repo">Repo</a>
      <a href="#contact">Contact</a>
    </nav>
  </div>
</header>

<section class="hero">
  <h2>Fully Automated Rolling Builds</h2>
  <p>Live Build ID, VERSION info, and latest commits—all automatic with Kn.Ai.</p>
</section>

<section id="features" class="features">
  <div class="feature"><h3>Automatic Build ID</h3><p>Generates unique timestamped Build IDs automatically.</p></div>
  <div class="feature"><h3>VERSION Tracking</h3><p>Updates the VERSION file and commits changes automatically.</p></div>
  <div class="feature"><h3>Git Tagging</h3><p>Creates and pushes tags for every successful build automatically.</p></div>
  <div class="feature"><h3>Self Verification</h3><p>Checks that VERSION matches the build and rolls back if needed.</p></div>
  <div class="feature"><h3>Temp File Handling</h3><p>Includes temp and extra file changes automatically in the workflow.</p></div>
  <div class="feature"><h3>Green Light Test</h3><p>Tests workflow in a sandboxed branch and cleans up automatically.</p></div>
</section>

<section id="status" class="status">
  <h3>Latest Build Status</h3>
  <p>Build ID: <span id="build-id">Fetching...</span></p>
  <p>VERSION: <span id="version-file">Fetching...</span></p>
</section>

<section id="repo" class="status">
  <h3>Repository</h3>
  <p><a href="https://github.com/flowgrove/Flowgrove" target="_blank">View on GitHub</a></p>
</section>

<footer id="contact">
  <p>&copy; 2025 Kn.Ai | <a href="#contact">Contact</a></p>
</footer>

<script>
  // Dynamically load Build ID & VERSION from a JSON endpoint
  fetch('build_info.json')
    .then(response => response.json())
    .then(data => {
      document.getElementById('build-id').textContent = data.build_id;
      document.getElementById('version-file').textContent = data.version;
    })
    .catch(()=>{console.log('Dynamic build info not available')});
</script>

</body>
</html>
<meta name="description" content="Kn.Ai – Fully automated rolling build system with live build status and version tracking.">
<meta name="description" content="Kn.Ai – Fully automated rolling build system with live build status and version tracking.">
- name: Output build info
  run: |
    echo "{\"build_id\": \"$GITHUB_SHA\", \"version\": \"$(cat VERSION)\"}" > build_info.json
- name: Output build info
  run: |
    echo "{\"build_id\": \"$GITHUB_SHA\", \"version\": \"$(cat VERSION)\"}" > build_info.json
<meta name="description" content="Kn.Ai – Fully automated rolling build system with live build status and version tracking.">
<title>Kn.Ai</title>
<link rel="icon" href="knai-logo.svg">
<meta name="description" content="Kn.Ai – Fully automated rolling build system with live build status and version tracking.">
- name: Output build info
  run: |
    echo "{\"build_id\": \"$GITHUB_SHA\", \"version\": \"$(cat VERSION)\"}" > build_info.json
fetch('build_info.json')
  .then(res => res.json())
  .then(data => {
    document.getElementById('build-id').textContent = data.build_id;
    document.getElementById('version-file').textContent = data.version;
  });
- name: Output build info
  run: |
    echo "{\"build_id\": \"$GITHUB_SHA\", \"version\": \"$(cat VERSION)\"}" > build_info.json
<meta name="description" content="Kn.Ai – Fully automated rolling build system with live build status and version tracking.">
<title>Kn.Ai</title>
<link rel="icon" href="knai-logo.svg">