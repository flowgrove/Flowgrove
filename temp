git checkout -b rolling-build-test
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test" && git push origin rolling-build-test
git push origin --delete rolling-build-test
git checkout main
git merge rolling-build-test --no-ff
git push origin main
git branch -D rolling-build-test
push:
  branches: ['**']
Rolling Build: <Build ID>
Update VERSION to <Build ID>
# Create temporary test branch
git checkout -b rolling-build-test

# Trigger dummy build
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test"
git push origin rolling-build-test

# Workflow runs automatically (VERSION update, Build ID, tag, verification)

# Merge automatically if needed
git checkout main
git merge rolling-build-test --no-ff
git push origin main

# Delete test branch locally & remotely
git branch -D rolling-build-test
git push origin --delete rolling-build-test
push:
  branches: ['**']
Rolling Build: <Build ID>
Update VERSION to <Build ID>
# Create temporary test branch
git checkout -b rolling-build-test

# Trigger dummy build
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test"
git push origin rolling-build-test

# Workflow runs automatically (VERSION update, Build ID, tag, verification)

# Merge automatically into main if needed
git checkout main
git merge rolling-build-test --no-ff
git push origin main

# Delete test branch locally & remotely
git branch -D rolling-build-test
git push origin --delete rolling-build-test
push:
  branches: ['**']
Rolling Build: <Build ID>
Update VERSION to <Build ID>
# Create temporary test branch
git checkout -b rolling-build-test

# Trigger dummy build
touch .rolltest && git add .rolltest && git commit -m "Rolling build green light test"
git push origin rolling-build-test

# Workflow runs automatically (VERSION update, Build ID, tag, verification)

# Merge automatically into main if needed
git checkout main
git merge rolling-build-test --no-ff
git push origin main

# Delete test branch locally & remotely
git branch -D rolling-build-test
git push origin --delete rolling-build-test
name: Rolling Build

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Generate Build ID
        id: build_id
        run: |
          BUILD_ID=$(date +"%Y.%m.%d.%H%M%S")
          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV

      - name: Update VERSION
        run: |
          echo "Rolling Build: $BUILD_ID" > VERSION
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add VERSION
          git commit -m "Update VERSION to $BUILD_ID" || echo "No changes to commit"
      - name: Create Git Tag
        run: |
          git tag -f build-$BUILD_ID
          git push origin build-$BUILD_ID --force
git checkout -b rolling-build-test
touch .rolltest && git add .rolltest && git commit -m "Green Light Test"
git push origin rolling-build-test
# Workflow runs automatically
git checkout main
git merge rolling-build-test --no-ff
git push origin main
git branch -D rolling-build-test
git push origin --delete rolling-build-test
